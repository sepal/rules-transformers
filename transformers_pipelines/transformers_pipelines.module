<?php
// $Id: transformers_pipelines.module,v 1.1.2.1 2010/06/14 14:15:39 sgilits Exp $

/**
 * @file Pipeline compononent for actions
 */

define('TRANSFORMERS_PIPELINE_PATH', 'admin/config/workflow/transformers');
//define('TRANSFORMERS_PIPELINE_RULE_PATH', RULES_UI_PATH . '/transformers');

/**
 * Implement hook_libraries_info().
 */
function hook_libraries_info() {
  $libraries['jsplumb'] = array(
    'title' => 'jsPlumb',
    'vendor url' => 'http://morrisonpitt.com/jsPlumb/html/index.html',
    'download url' => 'http://jsplumb.googlecode.com/files/jquery.jsPlumb-1.2-all-min.js',
    'version arguments' => array(
    ),
    files => array(
      'js' => array(
        'jquery.jsPlumb-1.2-all-min.js',
      ),
    ),
  );
  dpm('hook_libraries_info');
  return $libraries;
}


/**
 * Implements hook_menu().
 */
function transformers_pipelines_menu() {
  $item[TRANSFORMERS_PIPELINE_PATH . '/%transformer'] = array(
    'title' => t('Edit Transformer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('transformers_form_edit_rules_config', 4),
    'access arguments' => array('administer rules'),
    'description' => 'Manage reaction rules and rule components.',
    'type' => MENU_CALLBACK,
  );
  return $item;
}

function transformers_form_edit_rules_config($form, &$form_state, $rules_config) {
  //dpm($rules_config);
  return $form;
}

/**
 * Loads a single rule configuration from the database.
 *
 * @see rules_config_load_multiple()
 */
function transformer_load($name) {
  $configs = entity_get_controller('rules_config')->load(array($name));
  return $configs ? reset($configs) : FALSE;
}

function hook_rules_plugin_info() {
  return array(
    'transformer' => array(
      'class' => 'TransformersCSV',
      'embeddable' => 'RulesConditionContainer',
      'component' => TRUE,
    ),
  );
}
